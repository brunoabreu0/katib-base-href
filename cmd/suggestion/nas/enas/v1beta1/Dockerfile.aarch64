FROM golang:alpine AS build-env
# The GOPATH in the image is /go.
ADD . /go/src/github.com/kubeflow/katib
RUN if [ "$(uname -m)" = "ppc64le" ] || [ "$(uname -m)" = "aarch64" ]; then \
    apk --update add git gcc musl-dev && \
    go get github.com/grpc-ecosystem/grpc-health-probe && \
    mv $GOPATH/bin/grpc-health-probe /bin/grpc_health_probe && \
    chmod +x /bin/grpc_health_probe; \
    else \
    GRPC_HEALTH_PROBE_VERSION=v0.3.1 && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe; \
    fi

FROM python:3.7-slim-buster

ENV TARGET_DIR /opt/katib
ENV SUGGESTION_DIR cmd/suggestion/nas/enas/v1beta1

RUN apt-get update \
    && apt-get -y install software-properties-common \
    autoconf \
    automake \
    build-essential \
    cmake \
    libtool \
    pkg-config \
    wget \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    libhdf5-dev \
    libhdf5-serial-dev \
    hdf5-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip install cython numpy

RUN wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.14.0-buster/tensorflow-1.14.0-cp37-none-linux_aarch64.whl \
    && pip install tensorflow-1.14.0-cp37-none-linux_aarch64.whl \
    && rm tensorflow-1.14.0-cp37-none-linux_aarch64.whl \
    && rm -rf .cache

RUN pip install 'grpcio==1.23.0' 'protobuf==3.9.1' 'googleapis-common-protos==1.6.0'

COPY --from=build-env /bin/grpc_health_probe /bin/

ADD ./pkg/ ${TARGET_DIR}/pkg/
ADD ./${SUGGESTION_DIR}/ ${TARGET_DIR}/${SUGGESTION_DIR}/
WORKDIR  ${TARGET_DIR}/${SUGGESTION_DIR}

RUN chgrp -R 0 ${TARGET_DIR} \
  && chmod -R g+rwX ${TARGET_DIR}

ENV PYTHONPATH ${TARGET_DIR}:${TARGET_DIR}/pkg/apis/manager/v1alpha3/python:${TARGET_DIR}/pkg/apis/manager/health/python

ENTRYPOINT ["python", "main.py"]
