{
  "swagger": "2.0",
  "info": {
    "title": "api.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/Manager/DeleteObservationLog/{trial_name}": {
      "delete": {
        "summary": "*\nDelete all log of Observations for a Trial.",
        "operationId": "DeleteObservationLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/alpha3DeleteObservationLogReply"
            }
          }
        },
        "parameters": [
          {
            "name": "trial_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/Manager/GetObservationLog": {
      "post": {
        "summary": "*\nGet all log of Observations for a Trial.",
        "operationId": "GetObservationLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/alpha3GetObservationLogReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alpha3GetObservationLogRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/Manager/ReportObservationLog": {
      "post": {
        "summary": "* \nReport a log of Observations for a Trial.\nThe log consists of timestamp and value of metric.\nKatib store every log of metrics.\nYou can see accuracy curve or other metric logs on UI.",
        "operationId": "ReportObservationLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/alpha3ReportObservationLogReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alpha3ReportObservationLogRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    }
  },
  "definitions": {
    "alpha3AlgorithmSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "alpha3AlgorithmSpec": {
      "type": "object",
      "properties": {
        "algorithm_name": {
          "type": "string"
        },
        "algorithm_setting": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alpha3AlgorithmSetting"
          }
        },
        "early_stopping_spec": {
          "$ref": "#/definitions/alpha3EarlyStoppingSpec"
        }
      }
    },
    "alpha3DeleteObservationLogReply": {
      "type": "object"
    },
    "alpha3EarlyStoppingSpec": {
      "type": "object"
    },
    "alpha3GetObservationLogReply": {
      "type": "object",
      "properties": {
        "observation_log": {
          "$ref": "#/definitions/alpha3ObservationLog"
        }
      }
    },
    "alpha3GetObservationLogRequest": {
      "type": "object",
      "properties": {
        "trial_name": {
          "type": "string"
        },
        "metric_name": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        }
      }
    },
    "alpha3GetSuggestionsReply": {
      "type": "object",
      "properties": {
        "parameter_assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alpha3GetSuggestionsReplyParameterAssignments"
          }
        },
        "algorithm": {
          "$ref": "#/definitions/alpha3AlgorithmSpec"
        }
      }
    },
    "alpha3GetSuggestionsReplyParameterAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alpha3ParameterAssignment"
          }
        }
      }
    },
    "alpha3Metric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "alpha3MetricLog": {
      "type": "object",
      "properties": {
        "time_stamp": {
          "type": "string"
        },
        "metric": {
          "$ref": "#/definitions/alpha3Metric"
        }
      }
    },
    "alpha3ObservationLog": {
      "type": "object",
      "properties": {
        "metric_logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alpha3MetricLog"
          }
        }
      }
    },
    "alpha3ParameterAssignment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "alpha3ReportObservationLogReply": {
      "type": "object"
    },
    "alpha3ReportObservationLogRequest": {
      "type": "object",
      "properties": {
        "trial_name": {
          "type": "string"
        },
        "observation_log": {
          "$ref": "#/definitions/alpha3ObservationLog"
        }
      }
    },
    "alpha3ValidateAlgorithmSettingsReply": {
      "type": "object",
      "title": "*\nReturn INVALID_ARGUMENT Error if Algorithm Settings are not Valid"
    }
  }
}
