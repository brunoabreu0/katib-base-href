{
  "swagger": "2.0",
  "info": {
    "title": "api.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "beta1AlgorithmSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "*\nHP or NAS algorithm settings."
    },
    "beta1AlgorithmSpec": {
      "type": "object",
      "properties": {
        "algorithm_name": {
          "type": "string"
        },
        "algorithm_settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1AlgorithmSetting"
          }
        }
      },
      "description": "*\nHP or NAS algorithm specification."
    },
    "beta1ComparisonType": {
      "type": "string",
      "enum": [
        "UNKNOWN_COMPARISON",
        "EQUAL",
        "LESS",
        "GREATER"
      ],
      "default": "UNKNOWN_COMPARISON"
    },
    "beta1DeleteObservationLogReply": {
      "type": "object"
    },
    "beta1EarlyStoppingRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "comparison": {
          "$ref": "#/definitions/beta1ComparisonType"
        },
        "start_step": {
          "type": "integer",
          "format": "int32",
          "description": "Defines quantity of intermediate results that should be received before applying the rule.\nIf start step is empty, rule is applied from the first recorded metric."
        }
      },
      "description": "*\nEarlyStoppingRule represents single early stopping rule."
    },
    "beta1GetEarlyStoppingRulesReply": {
      "type": "object",
      "properties": {
        "early_stopping_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1EarlyStoppingRule"
          }
        }
      }
    },
    "beta1GetObservationLogReply": {
      "type": "object",
      "properties": {
        "observation_log": {
          "$ref": "#/definitions/beta1ObservationLog"
        }
      }
    },
    "beta1GetSuggestionsReply": {
      "type": "object",
      "properties": {
        "parameter_assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1GetSuggestionsReplyParameterAssignments"
          }
        },
        "algorithm": {
          "$ref": "#/definitions/beta1AlgorithmSpec"
        },
        "early_stopping_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1EarlyStoppingRule"
          }
        }
      }
    },
    "beta1GetSuggestionsReplyParameterAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1ParameterAssignment"
          }
        }
      }
    },
    "beta1Metric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "beta1MetricLog": {
      "type": "object",
      "properties": {
        "time_stamp": {
          "type": "string"
        },
        "metric": {
          "$ref": "#/definitions/beta1Metric"
        }
      }
    },
    "beta1ObservationLog": {
      "type": "object",
      "properties": {
        "metric_logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/beta1MetricLog"
          }
        }
      }
    },
    "beta1ParameterAssignment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "beta1ReportObservationLogReply": {
      "type": "object"
    },
    "beta1SetTrialStatusReply": {
      "type": "object"
    },
    "beta1ValidateAlgorithmSettingsReply": {
      "type": "object",
      "title": "*\nReturn INVALID_ARGUMENT Error if Algorithm Settings are not Valid"
    }
  }
}
