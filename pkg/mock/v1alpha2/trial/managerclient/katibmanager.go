// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeflow/katib/pkg/controller/v1alpha2/trial/managerclient (interfaces: Client)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/kubeflow/katib/pkg/api/operators/apis/trial/v1alpha2"
	v1alpha20 "github.com/kubeflow/katib/pkg/api/v1alpha2"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateTrialInDB mocks base method
func (m *MockClient) CreateTrialInDB(arg0 *v1alpha2.Trial) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTrialInDB", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTrialInDB indicates an expected call of CreateTrialInDB
func (mr *MockClientMockRecorder) CreateTrialInDB(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTrialInDB", reflect.TypeOf((*MockClient)(nil).CreateTrialInDB), arg0)
}

// GetTrialConf mocks base method
func (m *MockClient) GetTrialConf(arg0 *v1alpha2.Trial) *v1alpha20.Trial {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrialConf", arg0)
	ret0, _ := ret[0].(*v1alpha20.Trial)
	return ret0
}

// GetTrialConf indicates an expected call of GetTrialConf
func (mr *MockClientMockRecorder) GetTrialConf(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrialConf", reflect.TypeOf((*MockClient)(nil).GetTrialConf), arg0)
}

// GetTrialObservation mocks base method
func (m *MockClient) GetTrialObservation(arg0 *v1alpha2.Trial) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrialObservation", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetTrialObservation indicates an expected call of GetTrialObservation
func (mr *MockClientMockRecorder) GetTrialObservation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrialObservation", reflect.TypeOf((*MockClient)(nil).GetTrialObservation), arg0)
}

// UpdateTrialStatusInDB mocks base method
func (m *MockClient) UpdateTrialStatusInDB(arg0 *v1alpha2.Trial) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTrialStatusInDB", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTrialStatusInDB indicates an expected call of UpdateTrialStatusInDB
func (mr *MockClientMockRecorder) UpdateTrialStatusInDB(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTrialStatusInDB", reflect.TypeOf((*MockClient)(nil).UpdateTrialStatusInDB), arg0)
}
