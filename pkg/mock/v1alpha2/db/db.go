// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeflow/katib/pkg/db/v1alpha2 (interfaces: KatibDBInterface)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/kubeflow/katib/pkg/api/v1alpha2"
	reflect "reflect"
)

// MockKatibDBInterface is a mock of KatibDBInterface interface
type MockKatibDBInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKatibDBInterfaceMockRecorder
}

// MockKatibDBInterfaceMockRecorder is the mock recorder for MockKatibDBInterface
type MockKatibDBInterfaceMockRecorder struct {
	mock *MockKatibDBInterface
}

// NewMockKatibDBInterface creates a new mock instance
func NewMockKatibDBInterface(ctrl *gomock.Controller) *MockKatibDBInterface {
	mock := &MockKatibDBInterface{ctrl: ctrl}
	mock.recorder = &MockKatibDBInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKatibDBInterface) EXPECT() *MockKatibDBInterfaceMockRecorder {
	return m.recorder
}

// DBInit mocks base method
func (m *MockKatibDBInterface) DBInit() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DBInit")
}

// DBInit indicates an expected call of DBInit
func (mr *MockKatibDBInterfaceMockRecorder) DBInit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DBInit", reflect.TypeOf((*MockKatibDBInterface)(nil).DBInit))
}

// DeleteExperiment mocks base method
func (m *MockKatibDBInterface) DeleteExperiment(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteExperiment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteExperiment indicates an expected call of DeleteExperiment
func (mr *MockKatibDBInterfaceMockRecorder) DeleteExperiment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteExperiment", reflect.TypeOf((*MockKatibDBInterface)(nil).DeleteExperiment), arg0)
}

// DeleteTrial mocks base method
func (m *MockKatibDBInterface) DeleteTrial(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTrial", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTrial indicates an expected call of DeleteTrial
func (mr *MockKatibDBInterfaceMockRecorder) DeleteTrial(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTrial", reflect.TypeOf((*MockKatibDBInterface)(nil).DeleteTrial), arg0)
}

// GetAlgorithmExtraSettings mocks base method
func (m *MockKatibDBInterface) GetAlgorithmExtraSettings(arg0 string) ([]*v1alpha2.AlgorithmSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAlgorithmExtraSettings", arg0)
	ret0, _ := ret[0].([]*v1alpha2.AlgorithmSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAlgorithmExtraSettings indicates an expected call of GetAlgorithmExtraSettings
func (mr *MockKatibDBInterfaceMockRecorder) GetAlgorithmExtraSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlgorithmExtraSettings", reflect.TypeOf((*MockKatibDBInterface)(nil).GetAlgorithmExtraSettings), arg0)
}

// GetExperiment mocks base method
func (m *MockKatibDBInterface) GetExperiment(arg0 string) (*v1alpha2.Experiment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExperiment", arg0)
	ret0, _ := ret[0].(*v1alpha2.Experiment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExperiment indicates an expected call of GetExperiment
func (mr *MockKatibDBInterfaceMockRecorder) GetExperiment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExperiment", reflect.TypeOf((*MockKatibDBInterface)(nil).GetExperiment), arg0)
}

// GetExperimentList mocks base method
func (m *MockKatibDBInterface) GetExperimentList() ([]*v1alpha2.ExperimentSummary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExperimentList")
	ret0, _ := ret[0].([]*v1alpha2.ExperimentSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExperimentList indicates an expected call of GetExperimentList
func (mr *MockKatibDBInterfaceMockRecorder) GetExperimentList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExperimentList", reflect.TypeOf((*MockKatibDBInterface)(nil).GetExperimentList))
}

// GetObservationLog mocks base method
func (m *MockKatibDBInterface) GetObservationLog(arg0, arg1, arg2, arg3 string) (*v1alpha2.ObservationLog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObservationLog", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1alpha2.ObservationLog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObservationLog indicates an expected call of GetObservationLog
func (mr *MockKatibDBInterfaceMockRecorder) GetObservationLog(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObservationLog", reflect.TypeOf((*MockKatibDBInterface)(nil).GetObservationLog), arg0, arg1, arg2, arg3)
}

// GetTrial mocks base method
func (m *MockKatibDBInterface) GetTrial(arg0 string) (*v1alpha2.Trial, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrial", arg0)
	ret0, _ := ret[0].(*v1alpha2.Trial)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTrial indicates an expected call of GetTrial
func (mr *MockKatibDBInterfaceMockRecorder) GetTrial(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrial", reflect.TypeOf((*MockKatibDBInterface)(nil).GetTrial), arg0)
}

// GetTrialList mocks base method
func (m *MockKatibDBInterface) GetTrialList(arg0, arg1 string) ([]*v1alpha2.Trial, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrialList", arg0, arg1)
	ret0, _ := ret[0].([]*v1alpha2.Trial)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTrialList indicates an expected call of GetTrialList
func (mr *MockKatibDBInterfaceMockRecorder) GetTrialList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrialList", reflect.TypeOf((*MockKatibDBInterface)(nil).GetTrialList), arg0, arg1)
}

// RegisterExperiment mocks base method
func (m *MockKatibDBInterface) RegisterExperiment(arg0 *v1alpha2.Experiment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterExperiment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterExperiment indicates an expected call of RegisterExperiment
func (mr *MockKatibDBInterfaceMockRecorder) RegisterExperiment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterExperiment", reflect.TypeOf((*MockKatibDBInterface)(nil).RegisterExperiment), arg0)
}

// RegisterObservationLog mocks base method
func (m *MockKatibDBInterface) RegisterObservationLog(arg0 string, arg1 *v1alpha2.ObservationLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterObservationLog", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterObservationLog indicates an expected call of RegisterObservationLog
func (mr *MockKatibDBInterfaceMockRecorder) RegisterObservationLog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterObservationLog", reflect.TypeOf((*MockKatibDBInterface)(nil).RegisterObservationLog), arg0, arg1)
}

// RegisterTrial mocks base method
func (m *MockKatibDBInterface) RegisterTrial(arg0 *v1alpha2.Trial) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterTrial", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterTrial indicates an expected call of RegisterTrial
func (mr *MockKatibDBInterfaceMockRecorder) RegisterTrial(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterTrial", reflect.TypeOf((*MockKatibDBInterface)(nil).RegisterTrial), arg0)
}

// SelectOne mocks base method
func (m *MockKatibDBInterface) SelectOne() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectOne")
	ret0, _ := ret[0].(error)
	return ret0
}

// SelectOne indicates an expected call of SelectOne
func (mr *MockKatibDBInterfaceMockRecorder) SelectOne() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectOne", reflect.TypeOf((*MockKatibDBInterface)(nil).SelectOne))
}

// UpdateAlgorithmExtraSettings mocks base method
func (m *MockKatibDBInterface) UpdateAlgorithmExtraSettings(arg0 string, arg1 []*v1alpha2.AlgorithmSetting) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAlgorithmExtraSettings", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAlgorithmExtraSettings indicates an expected call of UpdateAlgorithmExtraSettings
func (mr *MockKatibDBInterfaceMockRecorder) UpdateAlgorithmExtraSettings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAlgorithmExtraSettings", reflect.TypeOf((*MockKatibDBInterface)(nil).UpdateAlgorithmExtraSettings), arg0, arg1)
}

// UpdateExperimentStatus mocks base method
func (m *MockKatibDBInterface) UpdateExperimentStatus(arg0 string, arg1 *v1alpha2.ExperimentStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateExperimentStatus", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateExperimentStatus indicates an expected call of UpdateExperimentStatus
func (mr *MockKatibDBInterfaceMockRecorder) UpdateExperimentStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateExperimentStatus", reflect.TypeOf((*MockKatibDBInterface)(nil).UpdateExperimentStatus), arg0, arg1)
}

// UpdateTrialStatus mocks base method
func (m *MockKatibDBInterface) UpdateTrialStatus(arg0 string, arg1 *v1alpha2.TrialStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTrialStatus", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTrialStatus indicates an expected call of UpdateTrialStatus
func (mr *MockKatibDBInterfaceMockRecorder) UpdateTrialStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTrialStatus", reflect.TypeOf((*MockKatibDBInterface)(nil).UpdateTrialStatus), arg0, arg1)
}
