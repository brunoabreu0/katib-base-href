# coding: utf-8

"""
    Katib

    Swagger description for Katib  # noqa: E501

    The version of the OpenAPI document: v1beta1-0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubeflow.katib
from kubeflow.katib.models.v1beta1_metrics_collector_spec import V1beta1MetricsCollectorSpec  # noqa: E501
from kubeflow.katib.rest import ApiException

class TestV1beta1MetricsCollectorSpec(unittest.TestCase):
    """V1beta1MetricsCollectorSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1beta1MetricsCollectorSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = katib.models.v1beta1_metrics_collector_spec.V1beta1MetricsCollectorSpec()  # noqa: E501
        if include_optional :
            return V1beta1MetricsCollectorSpec(
                collector = katib.models.v1beta1/collector_spec.v1beta1.CollectorSpec(
                    custom_collector = None, 
                    kind = '0', ), 
                source = katib.models.v1beta1/source_spec.v1beta1.SourceSpec(
                    file_system_path = katib.models.v1beta1/file_system_path.v1beta1.FileSystemPath(
                        kind = '0', 
                        path = '0', ), 
                    filter = katib.models.v1beta1/filter_spec.v1beta1.FilterSpec(
                        metrics_format = [
                            '0'
                            ], ), 
                    http_get = None, )
            )
        else :
            return V1beta1MetricsCollectorSpec(
        )

    def testV1beta1MetricsCollectorSpec(self):
        """Test V1beta1MetricsCollectorSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
