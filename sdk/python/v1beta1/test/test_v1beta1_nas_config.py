# coding: utf-8

"""
    Katib

    Swagger description for Katib  # noqa: E501

    The version of the OpenAPI document: v1beta1-0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubeflow.katib
from kubeflow.katib.models.v1beta1_nas_config import V1beta1NasConfig  # noqa: E501
from kubeflow.katib.rest import ApiException

class TestV1beta1NasConfig(unittest.TestCase):
    """V1beta1NasConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1beta1NasConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = katib.models.v1beta1_nas_config.V1beta1NasConfig()  # noqa: E501
        if include_optional :
            return V1beta1NasConfig(
                graph_config = katib.models.v1beta1/graph_config.v1beta1.GraphConfig(
                    input_sizes = [
                        56
                        ], 
                    num_layers = 56, 
                    output_sizes = [
                        56
                        ], ), 
                operations = [
                    katib.models.v1beta1/operation.v1beta1.Operation(
                        operation_type = '0', 
                        parameters = [
                            katib.models.v1beta1/parameter_spec.v1beta1.ParameterSpec(
                                feasible_space = katib.models.v1beta1/feasible_space.v1beta1.FeasibleSpace(
                                    list = [
                                        '0'
                                        ], 
                                    max = '0', 
                                    min = '0', 
                                    step = '0', ), 
                                name = '0', 
                                parameter_type = '0', )
                            ], )
                    ]
            )
        else :
            return V1beta1NasConfig(
        )

    def testV1beta1NasConfig(self):
        """Test V1beta1NasConfig"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
